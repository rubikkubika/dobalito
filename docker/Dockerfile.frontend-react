# ============================
# Stage 1 — Build React app
# ============================
FROM node:18-alpine AS build

# Рабочая директория
WORKDIR /app

# 1️⃣ Копируем только package.json и package-lock.json для кэша зависимостей
COPY frontend-react/package*.json ./

# 2️⃣ Устанавливаем зависимости, используя BuildKit cache
RUN --mount=type=cache,target=/root/.npm \
    npm ci --legacy-peer-deps

# 3️⃣ Копируем исходники (всё остальное)
COPY frontend-react/ ./

# 4️⃣ Сборка production-версии
RUN npm run build

# ============================
# Stage 2 — Serve with Nginx
# ============================
FROM nginx:alpine AS production

# 5️⃣ Копируем собранные файлы
COPY --from=build /app/build /usr/share/nginx/html

# 6️⃣ Копируем кастомный Nginx-конфиг
COPY docker/nginx-react.conf /etc/nginx/conf.d/default.conf

# 7️⃣ Настраиваем кэширование статики
RUN echo 'location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ { expires 1y; add_header Cache-Control "public, immutable"; }' \
    > /etc/nginx/conf.d/cache.conf

# 8️⃣ Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget -qO- http://localhost:3000 || exit 1

EXPOSE 3000

CMD ["nginx", "-g", "daemon off;"]
